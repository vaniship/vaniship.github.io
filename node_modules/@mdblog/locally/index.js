'use strict'

const fs = require('fs-extra')
const path = require('path')
const md5 = require('blueimp-md5')
const glob = require('glob')

function log (msg) {
  process.stdout.write(msg)
}

log('build start ...\n')
log('clear dist dir ...')
fs.removeSync('dist')
log(' ok.\n')

log('copy base files ...')
fs.copySync('node_modules', 'dist/node_modules')
fs.copySync('content', 'dist/content')
fs.copySync('config.json', 'dist/config.json')
fs.copySync('index.html', 'dist/index.html')
fs.copySync('favicon.ico', 'dist/favicon.ico')
log(' ok.\n')

// 转换文件并删除源文件
log('deal files ...')
glob('dist/**/*.{md,json}', null, function (err, files) {
  if (err) throw err
  files.forEach(function (file) {
    const md = fs.readFileSync(file) + ''
    const hash = md5(path.relative('dist', file).replace(/\\/g, '/'))
    fs.outputFileSync(`dist/mock/${hash}.js`, `jsonpcallback_${hash}(${JSON.stringify(md)})`)
    fs.removeSync(file)
  })
  log(' ok.\n')

  // 清理空目录
  log('clear empty dir ...')
  glob('dist/**/', null, function (err, files) {
    files = files.sort((a, b) => b.length - a.length)
    console.log(files)
    if (err) throw err
    files.forEach(function (file) {
      if (fs.readdirSync(file).length === 0) {
        fs.removeSync(file)
      }
    })
    log(' ok.\n')
    log('build success.\n')
  })
})
